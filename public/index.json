[{"content":"Hello!\nI recently changed my workflow to work with the web, and to show the details, I wanted to insert a graphic. I was using Excalidraw, and the advantage is that you can export it as SVG? .\nLimitations encountered üöß When I tried to import the SVG directly into the content of the entry, I ran into some problems. More than problems, they were limitations such as the following:\nThe need to define a background. Limited to a single colour profile. You cannot have one for light mode and one for dark mode. Cannot modify styles, as it was inserted as an \u0026lt;img\u0026gt; tag, which does not support inherited styles (useful info available here). Creating the shortcode ü•æ With the information from the last point in the previous section, we can create our own shortcode. So I decided to apply that and extend the behaviour a bit more. Here\u0026rsquo;s an example using the following snippet:\n{{\u0026lt; svg \u0026#34;static/images/blog/004/example.svg\u0026#34; \u0026gt;}} The first limitation I see in my implementation is the width, which in this example looks clearly huge and is not necessary, so I need to make the width an optional parameter.\nWe moved on from this shortcode that did not allow to set the width (it was predefined as 100% in the styles):\n{{$svg := .Get 0}} \u0026lt;div class=\u0026#34;svg-fill-background\u0026#34;\u0026gt; {{ $svg | readFile | safeHTML }} \u0026lt;/div\u0026gt; To the next one, where we can optionally indicate the percentage width, and the change can be seen below (we could extend this to more properties, but it\u0026rsquo;s not necessary for now):\n{{$svg := .Get 0}} {{$width := .Get 1 | default \u0026#34;100%\u0026#34;}} \u0026lt;div class=\u0026#34;svg-fill-background\u0026#34; style=\u0026#34;width: {{$width}}; margin: 0 auto\u0026#34;\u0026gt; {{ $svg | readFile | safeHTML }} \u0026lt;/div\u0026gt; {{\u0026lt; svg \u0026#34;static/images/blog/004/example.svg\u0026#34; \u0026#34;40%\u0026#34;\u0026gt;}} Light mode and dark mode üåó If you switch the web between the two modes, you can see how the graphic changes colour. It actually works as a single SVG graphic that is coloured with CSS? .\nbody .svg-fill-background svg { background: var(--code-bg); max-width: 100%; height: 100%; path { stroke: var(--primary) } text { fill: var(--content) } } You can check how the changes have turned out in the PR I prepared in my Github repository.\nCheers!\n","permalink":"https://jesusfj710.github.io/blog/004_shortcode-svg/","summary":"Hello!\nI recently changed my workflow to work with the web, and to show the details, I wanted to insert a graphic. I was using Excalidraw, and the advantage is that you can export it as SVG? .\nLimitations encountered üöß When I tried to import the SVG directly into the content of the entry, I ran into some problems. More than problems, they were limitations such as the following:","title":"Creating a shortcode to insert SVG in Hugo"},{"content":"Good afternoon, everyone!\nThe other day, I shared on my LinkedIn that I was going to start contributing to FOSS? projects because of the high impact these tools have on my work.\nThe truth is, even a small contribution can help a project cover the cost of a domain or other expenses.\nIn the context of SDET (Software Development Engineer in Test) and the QA (Quality Assurance) department in IT companies, I believe we rely heavily on these tools, but we usually don\u0026rsquo;t give much back. I understand that for personal projects that we abandon after a few days, we may not consider contributing monetarily (although that\u0026rsquo;s not the only way), but considering the impact and ease they provide us, I think it\u0026rsquo;s the right thing to do.\nLately, all of this has been on my mind, and talking to colleagues at work, I feel that I\u0026rsquo;m not alone in this opinion. The triggering event that made me take the step forward was when the author of Software Testing Weekly newsletter (which I highly recommend) mentioned a couple of weeks ago that the last original maintainer of Cucumber had been laid off and would no longer work on that project apparently (more info here and here).\nCucumber is a tool we use constantly every day in the QA team, and without it, we could say that many of the frameworks we use would also be affected.\nTherefore, I decided to start contributing to Cucumber and Webdriver.io because they are extensive projects, highly flexible, and used by many companies.\nI invite all of you to reflect on this and try, as much as possible, to contribute to these types of projects because in the end, everything has an impact on other projects that private companies will ultimately use without giving credit or returning some of the work to the community. ü•∫\nThank you and take care!\n","permalink":"https://jesusfj710.github.io/blog/003_contributing_to_foss/","summary":"Good afternoon, everyone!\nThe other day, I shared on my LinkedIn that I was going to start contributing to FOSS? projects because of the high impact these tools have on my work.\nThe truth is, even a small contribution can help a project cover the cost of a domain or other expenses.\nIn the context of SDET (Software Development Engineer in Test) and the QA (Quality Assurance) department in IT companies, I believe we rely heavily on these tools, but we usually don\u0026rsquo;t give much back.","title":"Contributing to FOSS"},{"content":" ‚ö†Ô∏è Update 04/24/2023 ‚ö†Ô∏è: After checking that the charlola theme was actually (without having correctly attributed it) a fork of hugo-PaperMod I decided to change it and update the repository license.\nAfter a long time, I have finally decided to make a website where I can have my own portfolio (in the future) as well as uploading some articles about things I find interesting.\nThe aim is no other than forcing myself to document and explain how I do things and thus be able to share everything.\nBuilding the web The website is built with Hugo which uses Go aka Golang underneath.\nIt\u0026rsquo;s super convenient to be able to write things directly in markdown, upload them to your Github repository, have a Github workflow do the build of the site and publish it directly in less than a minute.\nYou can take a look at the progress of the project in the github repository.\nA big thanks to charlola for his template and instructions on the Hugo theme.\nFeatures of the website Home page with link to my LinkedIn and Github Blog Contact page It will also be available in three languages:\nSpanish English Korean (although the blog will only be in English and Spanish) ","permalink":"https://jesusfj710.github.io/blog/001_first-post/","summary":"‚ö†Ô∏è Update 04/24/2023 ‚ö†Ô∏è: After checking that the charlola theme was actually (without having correctly attributed it) a fork of hugo-PaperMod I decided to change it and update the repository license.\nAfter a long time, I have finally decided to make a website where I can have my own portfolio (in the future) as well as uploading some articles about things I find interesting.\nThe aim is no other than forcing myself to document and explain how I do things and thus be able to share everything.","title":"First post!"},{"content":"If you have a short message or question, drop a message via LinkedIn üòä.\n","permalink":"https://jesusfj710.github.io/contact/","summary":"If you have a short message or question, drop a message via LinkedIn üòä.","title":"Contact"}]